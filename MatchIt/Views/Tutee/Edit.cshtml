@model MatchIt.ViewModels.TuteeCreateViewModel

@{
	ViewData["Title"] = "Edit";
	// Since Address isn't a string, it requires a cast.
	var courses = ViewData["Courses"] as IEnumerable<Course>;

}

@if (!String.IsNullOrEmpty(TempData?["ErrorMessage"]?.ToString()))
{
	<div class="alert alert-danger alert-dismissible fade show" role="alert">
		@TempData["ErrorMessage"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

<h1>Edit</h1>

<h4>Tutee</h4>
<hr />


<form asp-action="Edit" class="row g-3">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div>
	<div class="col-md-6">
		<label asp-for="FirstName" class="form-label"></label>
		<input asp-for="FirstName" class="form-control" />
		<span asp-validation-for="FirstName" class="text-danger"></span>
	</div>
	<div class="col-md-6">
		<label asp-for="LastName" class="form-label"></label>
		<input asp-for="LastName" class="form-control" />
		<span asp-validation-for="LastName" class="text-danger"></span>
	</div>
	<div class="col-md-6">
		<label asp-for="StudentId" class="form-label"></label>
		<input asp-for="StudentId" class="form-control" />
		<span asp-validation-for="StudentId" class="text-danger"></span>
	</div>
	<div class="col-md-6">
		<label asp-for="PhoneNumber" class="form-label"></label>
		<input asp-for="PhoneNumber" class="form-control" />
		<span asp-validation-for="PhoneNumber" class="text-danger"></span>
	</div>
	<div class="col-12">
		<label asp-for="EmailAddress" class="form-label"></label>
		<input asp-for="EmailAddress" class="form-control" />
		<span asp-validation-for="EmailAddress" class="text-danger"></span>
	</div>
	<div class="col-12">
		<label class="form-label">Courses</label>
		<select class="form-control courses-basic-multiple" asp-items="@Model.CoursesSelectList" asp-for="SelectedCourses" required>
			<option value="">-- Select Course --</option>
		</select>
	</div>
	<div class="row g-3 mt-0">
		<div class="col-md-4">
			<label for="Availabilities[0].Day" class="form-label">Day</label>
			<select class="form-control" name="Availabilities[0].Day" required>
				<option value="Monday" selected=@(Model.Availabilities[0].Day == "Monday")>Monday</option>
				<option value="Tuesday" selected=@(Model.Availabilities[0].Day == "Tuesday")>Tuesday</option>
				<option value="Wednesday" selected=@(Model.Availabilities[0].Day == "Wednesday")>Wednesday</option>
				<option value="Thursday" selected=@(Model.Availabilities[0].Day == "Thursday")>Thursday</option>
				<option value="Friday" selected=@(Model.Availabilities[0].Day == "Friday")>Friday</option>
				<option value="Saturday" selected=@(Model.Availabilities[0].Day == "Saturday")>Saturday</option>
				<option value="Sunday" selected=@(Model.Availabilities[0].Day == "Sunday")>Sunday</option>
			</select>
		</div>
		<div class="col-md-3">
			<label for="Availabilities[0].From" class="form-label">From</label>
			<input type="time" class="form-control" name="Availabilities[0].From" value="@(Model.Availabilities[0].From)" required/>
		</div>
		<div class="col-md-3">
			<label for="Availabilities[0].To" class="form-label">To</label>
			<input type="time" class="form-control" name="Availabilities[0].To" value="@(Model.Availabilities[0].To)" required/>
		</div>
	</div>
	<div id="new-input" class="row g-3 mt-0">
		@for (int i = 1; i < Model.Availabilities.Count; i++)
		{
				<div class="col-md-4">
					<label for="Availabilities[@i].Day" class="form-label">Day</label>
					<select class="form-control" name="Availabilities[@i].Day" required>
						<option value="Monday" selected=@(Model.Availabilities[i].Day == "Monday")>Monday</option>
						<option value="Tuesday" selected=@(Model.Availabilities[i].Day == "Tuesday")>Tuesday</option>
						<option value="Wednesday" selected=@(Model.Availabilities[i].Day == "Wednesday")>Wednesday</option>
						<option value="Thursday" selected=@(Model.Availabilities[i].Day == "Thursday")>Thursday</option>
						<option value="Friday" selected=@(Model.Availabilities[i].Day == "Friday")>Friday</option>
						<option value="Saturday" selected=@(Model.Availabilities[i].Day == "Saturday")>Saturday</option>
						<option value="Sunday" selected=@(Model.Availabilities[i].Day == "Sunday")>Sunday</option>
					</select>
				</div>
				<div class="col-md-3">
					<label for="Availabilities[@i].From" class="form-label">From</label>
					<input type="time" class="form-control" name="Availabilities[@i].From" value="@(Model.Availabilities[@i].From)" required/>
				</div>
				<div class="col-md-3">
					<label for="Availabilities[@i].To" class="form-label">To</label>
					<input type="time" class="form-control" name="Availabilities[@i].To" value="@(Model.Availabilities[@i].To)" required/>
				</div>
		}
	</div>
	<div class="col-md-1">
		<button id="add-time" class="btn btn-success col-md-1 availability-btn">Add Time</button>
	</div>
	<div class="col-md-1">
		<button id="remove-time" class="btn btn-danger col-md-1 mx-3 availability-btn">Remove Time</button>
	</div>

	<div class="col-12">
		<button type="submit" class="btn btn-primary">Edit</button>
	</div>

</form>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
					<script>
						let count = @(Model.Availabilities.Count);
						$(document).ready(function() {
							$('.courses-basic-multiple').select2();
						});

						$("#remove-time").click(function (e) {
							e.preventDefault()
							count = 1;
							$('#new-input').empty();
						})

						$("#add-time").click(function (e) {
							e.preventDefault()
						newRowAdd =
							`
									<div class="col-md-4">
										<label for="Availabilities[${count}].Day" class="form-label">Day</label>
										<select class="form-control" name="Availabilities[${count}].Day" required>
											<option value="Monday">Monday</option>
											<option value="Tuesday">Tuesday</option>
											<option value="Wednesday">Wednesday</option>
											<option value="Thursday">Thursday</option>
											<option value="Friday">Friday</option>
											<option value="Saturday">Saturday</option>
											<option value="Sunday">Sunday</option>
										</select>
									</div>
									<div class="col-md-3">
										<label for="Availabilities[${count}].From" class="form-label">From</label>
										<input type="time" class="form-control" name="Availabilities[${count}].From" required/>
									</div>
									<div class="col-md-3">
										<label for="Availabilities[${count}].To" class="form-label">To</label>
										<input type="time" class="form-control" name="Availabilities[${count}].To" required/>
									</div>
							`;

										// Delete row is a bit tricky I am removing it for now.

										//						<div class="col-md-2 d-flex align-items-end pb-2" >
										//	<i class="bi bi-trash" id="DeleteRow"></i>
										//</div>

						$('#new-input').append(newRowAdd);
						count++;
					});

					//$("body").on("click", "#DeleteRow", function () {
					//	count--;
					//	$(this).parent().parent().remove();
					//})

					</script>
}
