@model IEnumerable<MatchIt.Models.MatchingStudents>

@{
    ViewData["Title"] = "Matched List";
}

@if (!String.IsNullOrEmpty(TempData?["ErrorMessage"]?.ToString()))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!String.IsNullOrEmpty(TempData?["SuccessMessage"]?.ToString()))
{
        <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}

<h1>Matched List</h1>

<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Tutor)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Tutee)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Course)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.Tutor
                </td>
                <td>
                    @item.Tutee
                </td>
                <td>
                    @item.Course
                </td>
            </tr>
        }
    </tbody>
</table>
